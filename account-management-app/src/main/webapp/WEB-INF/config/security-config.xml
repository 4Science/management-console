<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.springframework.org/schema/security"
  xsi:schemaLocation="
           http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security-2.0.4.xsd">

  <beans:bean id="authenticationProcessingFilter"
              class="org.springframework.security.ui.webapp.AuthenticationProcessingFilter">
    <beans:property name="authenticationManager" ref="authenticationManager" />
    <beans:property name="authenticationFailureUrl" value="/login?error=true" />
    <beans:property name="defaultTargetUrl" value="/" />
    <beans:property name="filterProcessesUrl" value="/j_spring_security_check" />
  </beans:bean>

  <http auto-config="false" entry-point-ref="authenticationProcessingFilterEntryPoint">
    <intercept-url pattern="/pub/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />
    <intercept-url pattern="/login*" access="IS_AUTHENTICATED_ANONYMOUSLY" />
    <intercept-url pattern="/css/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />
    <intercept-url pattern="/img/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />

    <intercept-url pattern="/accounts/**" access="ROLE_USER"  />
    <form-login login-page="/login" always-use-default-target="false"  authentication-failure-url="/login?error=true" />
    <anonymous />
    <http-basic />
    <logout logout-url="/logout"/>
  </http>

  <!-- AuthN Manager -->
  <authentication-manager alias="authenticationManager"/>
  <authentication-provider user-service-ref="userDetailsSvc"/>
  <beans:bean id="userDetailsSvc" class="org.duracloud.security.impl.UserDetailsServiceImpl"/>

	<beans:bean id="authenticationProcessingFilterEntryPoint"	class="org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint">
		<beans:property name="loginFormUrl" value="/login" />
		<beans:property name="serverSideRedirect" value="true" />
	</beans:bean>

  <!-- AOP to log(in/out) ContentStoreMgr and ServicesMgr -->
  <!-- 
  
  <beans:bean id="securityContextUtil" class="org.duracloud.security.context.SecurityContextUtil"/>
  <beans:bean id="securityAdvice" class="org.duracloud.duradmin.security.SecurityAdvice">
    <beans:constructor-arg ref="securityContextUtil"/>
  </beans:bean>

  <beans:bean id="securityAdvisor" class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">
    <beans:property name="advice" ref="securityAdvice"/>
    <beans:property name="pattern" value=".*Manager.*"/>
  </beans:bean>
 -->
  
  <!--
     AOP Proxy Creation Over ContentStoreMgr and ServicesMgr.
     Note: Would use spring...DefaultAdvisorAutoProxyCreator, but default constructor required.
  <beans:bean id="contentStoreManager" class="org.springframework.aop.framework.ProxyFactoryBean">
    <beans:property name="target" ref="contentStoreManagerTarget"/>
    <beans:property name="interceptorNames" value="securityAdvisor"/>
  </beans:bean>

  <beans:bean id="servicesManager" class="org.springframework.aop.framework.ProxyFactoryBean">
    <beans:property name="target" ref="servicesManagerTarget"/>
    <beans:property name="interceptorNames" value="securityAdvisor"/>
  </beans:bean>
   -->

</beans:beans>