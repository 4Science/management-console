
::Tomcat::
To use the tomcat-maven plugin to (re)deploy the webapp, add the user to 'tomcat-users.xml' :

<tomcat-users>
  <role rolename="manager"/>
  <role rolename="admin"/>
  <user username="tomcat" password="password" roles="admin,manager"/>
</tomcat-users>


::Maven::
To use the tomcat plugin, also add the 'server' to your maven 'settings.xml':

<server>
  <id>tomcat-server</id>
  <username>tomcat</username>
  <password>password</password>
</server>

Until we have an internal maven repository to host third-party jars that do not exist in an m2 repository, run the following command(s) from ./trunk:

mvn install:install-file -Dfile=resources/libs/amazon-ec2-2008-12-01-java-library.jar -DgroupId=com.amazonaws -DartifactId=ec2 -Dversion=2008-12-01 -Dpackaging=jar

mvn install:install-file -Dfile=resources/libs/amazon-ec2-2008-12-01-java-library-src.jar -DgroupId=com.amazonaws -DartifactId=ec2-src -Dversion=2008-12-01 -Dpackaging=jar

::Eclipse::
To make your .classpath resolve, from trunk run:
mvn clean install

Then in the 'Libraries' tab of the 'build-path-configuration' add a new 'variable' named 'M2_REPO'.
>Name: 'M2_REPO'
>Path: '/home/awoods/.m2/repository' [or wherever your repository is]

::Sources::
To download source jars for all dependent libraries run:
mvn dependency:sources

** NOTE **
While the integration between the DuraSpace instance and the DuraSpace.org site is in work
there is no good way to retrieve credentials to access Amazon S3. To get around this, you
must add a file that is accessable at this URL: http://localhost:8080/awsCredentials.
This file should include, on a single line with no spaces: Your Amazon Access Key ID followed 
by a colon, followed by your Amazon Secret Access Key. Using Tomcat, you can place this file (named
awsCredentials) in the webapps/ROOT directory and it will be served at the URL listed above.
If this file is not available, the integration tests for instancewebapp will fail.


