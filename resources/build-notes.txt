::versions::
maven-2.0.9
tomcat-6.0.18

::build, run unit tests::
mvn clean package

::build, run unit tests, deploy, run integration tests::
mvn clean install

http://localhost:8080/mainwebapp
http://localhost:8080/instancewebapp

::useful commands::
mvn clean install -Ddatabase.home.default=<path.of.database.home>

::clover::
If you plan on using clover, the following element needs to be added to your maven 'settings.xml' (see resources/conf/settings.xml):

  <profiles>
    <profile>
      <id>profile-clover</id>
      <activation>
        <property>
          <name>profile</name>
          <value>clover</value>
        </property>
      </activation>
      <properties>
        <cloverLicense>[specify-location-of-clover.license]</cloverLicense>
      </properties>
    </profile>
  </profiles>

To run clover:
$mvn clover2:instrument clover2:aggregate clover2:clover -P profile-clover

A report will be generated in the following directory:
./target/site/clover/

::logging::
In order for log4j to know the base directory in which to write logs, 
 'duraspace.home' should be defined in your maven 'settings.xml' (see resources/conf/settings.xml):
  
  <properties>
    <duraspace.home>[location-of-writable-duraspace-directory]</duraspace.home>
    ...

::services::
Services (projects in the /services directory) were built using PAX Construct, 
see http://www.ops4j.org/projects/pax/construct/ for more info on using these tools.
These projects are built as usual by using "mvn clean install". In order to deploy
them into an OSGi container, use "mvn clean install pax:provision", which will
install all of the services into the default OSGi container (Apache Felix). Include
the "-Dframework=equinox" option to start the Equinox container instead. Quotes 
surrounding the framework option are necessary on Windows platforms:

mvn clean install pax:provision "-Dframework=equinox"
