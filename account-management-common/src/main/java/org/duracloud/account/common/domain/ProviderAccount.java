/*
 * Copyright (c) 2009-2010 DuraSpace. All rights reserved.
 */
package org.duracloud.account.common.domain;

/**
 * @author: Bill Branan
 * Date: Feb 1, 2010
 */
public class ProviderAccount extends BaseDomainData {

    public enum ProviderType {
        AMAZON(),
        RACKSPACE(),
        MICROSOFT();
    }

    /**
     * The type of provider - meaning the organization acting as the provider
     * of services.
     */
    private ProviderType providerType;

    /**
     * The username necessary to connect to this provider's services. This may
     * have different names at each provider (e.g. at Amazon, this is the
     * Access Key ID)
     */
    private String username;

    /**
     * The password necessary to connect to this provider's services. This may
     * have different names at each provider (e.g. at Amazon, this is the
     * Secret Access Key)
     */
    private String password;

    public ProviderAccount(int id,
                           ProviderType providerType,
                           String username,
                           String password) {
        this(id, providerType, username, password, 0);
    }

    public ProviderAccount(int id,
                           ProviderType providerType,
                           String username,
                           String password,
                           int counter) {
        this.id = id;
        this.providerType = providerType;
        this.username = username;
        this.password = password;
        this.counter = counter;
    }

    public ProviderType getProviderType() {
        return providerType;
    }

    public String getUsername() {
        return username;
    }

    public String getPassword() {
        return password;
    }

    /*
     * Generated by IntelliJ
     */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }

        ProviderAccount that = (ProviderAccount) o;

        if (password != null ? !password.equals(that.password) :
            that.password != null) {
            return false;
        }
        if (providerType != that.providerType) {
            return false;
        }
        if (username != null ? !username.equals(that.username) :
            that.username != null) {
            return false;
        }

        return true;
    }

    /*
     * Generated by IntelliJ
     */    
    @Override
    public int hashCode() {
        int result = providerType.hashCode();
        result = 31 * result + (username != null ? username.hashCode() : 0);
        result = 31 * result + (password != null ? password.hashCode() : 0);
        return result;
    }
}
