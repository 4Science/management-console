/*
 * Copyright (c) 2009-2010 DuraSpace. All rights reserved.
 */
package org.duracloud.account.common.domain;

/**
 * @author: Bill Branan
 * Date: Feb 1, 2010
 */
public class ServerImage extends BaseDomainData {

    /**
     * The username of the DuraCloud root user which can be used to perform
     * actions on DuraCloud instances created from this image
     */
    public static final String DC_ROOT_USERNAME = "root";

    /**
     * The ID of the ComputeProviderAccount on which this server image is hosted.
     */
    private int providerAccountId;

    /**
     * The ID given to this image by the hosting provider. This will likely
     * have a different name at each provider (e.g. at Amazon this is the
     * AMI ID, the Amazon Machine Image Identifier).
     */
    private String providerImageId;

    /**
     * The version of the DuraCloud software loaded on this image.
     */
    private String version;

    /**
     * Description of the image.
     */
    private String description;

    /**
     * The password of the DuraCloud root user which can be used to perform
     * actions on DuraCloud instances created from this image
     */
    private String dcRootPassword;

    /**
     * If true, indicates that this is the latest version in the database. This
     * value should be true on one and only one row in the Image table.
     */
    private boolean latest;

    public ServerImage(int id,
                       int providerAccountId,
                       String providerImageId,
                       String version,
                       String description,
                       String dcRootPassword,
                       boolean latest) {
        this(id, providerAccountId, providerImageId,
             version, description, dcRootPassword, latest, 0);
    }

    public ServerImage(int id,
                       int providerAccountId,
                       String providerImageId,
                       String version,
                       String description,
                       String dcRootPassword,
                       boolean latest,
                       int counter) {
        this.id = id;
        this.providerAccountId = providerAccountId;
        this.providerImageId = providerImageId;
        this.version = version;
        this.description = description;
        this.dcRootPassword = dcRootPassword;
        this.latest = latest;
        this.counter = counter;
    }

    public int getProviderAccountId() {
        return providerAccountId;
    }

    public void setProviderAccountId(int providerAccountId) {
        this.providerAccountId = providerAccountId;
    }

    public String getProviderImageId() {
        return providerImageId;
    }

    public void setProviderImageId(String providerImageId) {
        this.providerImageId = providerImageId;
    }

    public String getVersion() {
        return version;
    }

    public void setVersion(String version) {
        this.version = version;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public String getDcRootPassword() {
        return dcRootPassword;
    }

    public void setDcRootPassword(String dcRootPassword) {
        this.dcRootPassword = dcRootPassword;
    }

    public boolean isLatest() {
        return latest;
    }

    public void setLatest(boolean latest) {
        this.latest = latest;
    }

    /*
     * Generated by IntelliJ
     */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }

        ServerImage that = (ServerImage) o;

        if (latest != that.latest) {
            return false;
        }
        if (providerAccountId != that.providerAccountId) {
            return false;
        }
        if (dcRootPassword != null ? !dcRootPassword
            .equals(that.dcRootPassword) : that.dcRootPassword != null) {
            return false;
        }
        if (description != null ? !description.equals(that.description) :
            that.description != null) {
            return false;
        }
        if (providerImageId != null ? !providerImageId
            .equals(that.providerImageId) : that.providerImageId != null) {
            return false;
        }
        if (version != null ? !version.equals(that.version) :
            that.version != null) {
            return false;
        }

        return true;
    }

    /*
     * Generated by IntelliJ
     */
    @Override
    public int hashCode() {
        int result = providerAccountId;
        result = 31 * result +
            (providerImageId != null ? providerImageId.hashCode() : 0);
        result = 31 * result + (version != null ? version.hashCode() : 0);
        result =
            31 * result + (description != null ? description.hashCode() : 0);
        result = 31 * result +
            (dcRootPassword != null ? dcRootPassword.hashCode() : 0);
        result = 31 * result + (latest ? 1 : 0);
        return result;
    }
}
